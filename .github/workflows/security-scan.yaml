name: Container Security Scan

on:    
  # push:
  #   branches-ignore:
  #     - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  DEPLOY_NAME: sysdigvoteapp
  WORKER_IMG: voteapp/worker
  VOTE_IMG: voteapp/vote
  RESULT_IMG: voteapp/result 
  VERSION: latest
  SYSDIG_API_URL: https://app.us4.sysdig.com/
  SYSDIG_LINUX_BINARY: "https://download.sysdig.com/scanning/bin/sysdig-cli-scanner/$(curl -L -s https://download.sysdig.com/scanning/sysdig-cli-scanner/latest_version.txt)/linux/amd64/sysdig-cli-scanner"
jobs:

  Scan-Container-Images:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Build and Export Local Containers
      run: |

        docker buildx build --no-cache worker/ -t ${{ env.WORKER_IMG }}:local
        docker buildx build --no-cache vote/ -t ${{ env.VOTE_IMG }}:local
        docker buildx build --no-cache result/ -t ${{ env.RESULT_IMG }}:local
    
    - name: Download Sysdig
      run: |

        export SECURE_API_TOKEN=${{ secrets.SYSDIG_SECURE_TOKEN }}
        curl -LO ${{  env.SYSDIG_LINUX_BINARY }}
        chmod +x ./sysdig-cli-scanner

    - name: Scan Worker Container
      continue-on-error: true
      run: |

        ./sysdig-cli-scanner --apiurl ${{ env.SYSDIG_API_URL }} docker://${{ env.WORKER_IMG }}:local --console-log

    - name: Scan Vote Container
      continue-on-error: true
      run: |

        ./sysdig-cli-scanner --apiurl ${{ env.SYSDIG_API_URL }} docker://${{ env.VOTE_IMG }}:local --console-log

    - name: Scan Result Container
      continue-on-error: true
      run: |

        ./sysdig-cli-scanner --apiurl ${{ env.SYSDIG_API_URL }} docker://${{ env.RESULT_IMG }}:local --console-log        

    - name: Save Container Images
      run: |

        docker save -o worker-local.tar ${{ env.WORKER_IMG }}:local
        docker save -o vote-local.tar ${{ env.VOTE_IMG }}:local
        docker save -o result-local.tar ${{ env.RESULT_IMG }}:local

    - name: Upload Container Tarball Artifacts
      uses: actions/upload-artifact@v3.1.2
      with:
        name: container-images
        path: |
          worker-local.tar
          vote-local.tar
          result-local.tar      
