name: Terraform Container Build

on:    
  pull_request:
    branches:
      - main
      - erick-testingcicd
    types:
      - opened
      - synchronize      

  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  IMAGE_NAME: prosimo/terraform
  VERSION: latest

jobs:

  Build-Infrastructure:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy Azure Container Instance
      id: createInfra
      run: |
        # Deploy templates
        az deployment sub create --name sysdigvoteapp  --location eastus2 --template-file templates/bicep/main.bicep
        
        # Get ACR resource ID and endpoint from deployment output
        acr_resource_id=$(az deployment sub show --name sysdigvoteapp --query 'properties.outputs.acrId.value' --output tsv)
        acr_endpoint=$(az deployment sub show --name sysdigvoteapp --query 'properties.outputs.acrEndpoint.value' --output tsv)

        # Attach using acr-resource-id
        az aks update -n myAKSCluster -g myResourceGroup --attach-acr acr_resource_id

        # Export output variables
        echo "::set-output name=acr_resource_id::$acr_resource_id"
        echo "::set-output name=acr_endpoint::$acr_endpoint"

    - name: Build and Export Local Container
      run: |
        docker build . -t ${{ env.IMAGE_NAME }}:local

    - name: Login to registry
      uses: docker/login-action@v1
      with:
        registry: ${{ steps.createInfra.outputs.acrEndpoint }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Tag and push
      run: |
        docker tag ${{ env.IMAGE_NAME }}:local ${{ secrets.ACR_ENDPOINT }}/${{ env.IMAGE_NAME }}
        docker push ${{ secrets.ACR_ENDPOINT }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}